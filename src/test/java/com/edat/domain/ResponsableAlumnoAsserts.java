package com.edat.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ResponsableAlumnoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertResponsableAlumnoAllPropertiesEquals(ResponsableAlumno expected, ResponsableAlumno actual) {
        assertResponsableAlumnoAutoGeneratedPropertiesEquals(expected, actual);
        assertResponsableAlumnoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertResponsableAlumnoAllUpdatablePropertiesEquals(ResponsableAlumno expected, ResponsableAlumno actual) {
        assertResponsableAlumnoUpdatableFieldsEquals(expected, actual);
        assertResponsableAlumnoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertResponsableAlumnoAutoGeneratedPropertiesEquals(ResponsableAlumno expected, ResponsableAlumno actual) {
        assertThat(expected)
            .as("Verify ResponsableAlumno auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertResponsableAlumnoUpdatableFieldsEquals(ResponsableAlumno expected, ResponsableAlumno actual) {
        assertThat(expected)
            .as("Verify ResponsableAlumno relevant properties")
            .satisfies(e -> assertThat(e.getNombre()).as("check nombre").isEqualTo(actual.getNombre()))
            .satisfies(e -> assertThat(e.getApellido()).as("check apellido").isEqualTo(actual.getApellido()))
            .satisfies(e -> assertThat(e.getDni()).as("check dni").isEqualTo(actual.getDni()))
            .satisfies(e -> assertThat(e.getTelefono()).as("check telefono").isEqualTo(actual.getTelefono()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertResponsableAlumnoUpdatableRelationshipsEquals(ResponsableAlumno expected, ResponsableAlumno actual) {
        assertThat(expected)
            .as("Verify ResponsableAlumno relationships")
            .satisfies(e -> assertThat(e.getAlumnos()).as("check alumnos").isEqualTo(actual.getAlumnos()))
            .satisfies(e -> assertThat(e.getAutorizados()).as("check autorizados").isEqualTo(actual.getAutorizados()));
    }
}
